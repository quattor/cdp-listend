<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.quattor.daemon</groupId>
  <artifactId>cdp-listend</artifactId>
  <packaging>pom</packaging>
  <version>24.10.0-rc3</version>
  <name>Configuration Distribution Protocol client daemon</name>
  <repositories>
    <repository>
      <id>quattor-releases</id>
      <url>http://lapp-repo01.in2p3.fr:8081/nexus/content/repositories/releases/</url>
    </repository>
  </repositories>
  <parent>
    <groupId>org.quattor.maven</groupId>
    <artifactId>build-profile</artifactId>
    <version>1.56</version>
  </parent>
  <scm>
    <connection>scm:git:git://github.com/quattor/cdp-listend.git</connection>
    <developerConnection>scm:git:git@github.com:quattor/cdp-listend.git</developerConnection>
    <url>https://github.com/quattor/cdp-listend</url>
  </scm>
  <licenses>
    <license>
      <name>Apache 2 License</name>
      <url>http://www.opensource.org/licenses/apache2.0</url>
      <comments>Copyright (c) Responsible Organization</comments>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Luis Fernando Muñoz Mejías</name>
      <email>Luis.Munoz@UGent.be</email>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Germán Cancio Meliá</name>
      <email>German.Cancio@cern.ch</email>
      <roles>
        <role>author</role>
      </roles>
    </contributor>
    <contributor>
      <name>Marco Emilio Poleggi</name>
      <roles>
        <role>author</role>
      </roles>
    </contributor>
    <contributor>
      <name>Nick Williams</name>
      <email>nick.williams@morganstanley.com</email>
      <roles>
        <role>contributor</role>
      </roles>
    </contributor>
  </contributors>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>rpm-maven-plugin</artifactId>
          <configuration>
            <summary>Configuration Distribution Protocol client daemon</summary>
            <name>${project.artifactId}</name>
            <url>https://github.com/quattor/cdp-listend/tree/master</url>
            <requires>
              <require>crontabs</require>
              <require>logrotate</require>
            </requires>
            <preinstallScriptlet>
              <script><![CDATA[
        if [ "$1" -eq 2 ]; then  # upgrade
                if [ -x /sbin/chkconfig -a -x /sbin/service -a -h /etc/rc3.d/S30${project.artifactId} ]
                then
                        # Upgrade from the initscript version. The daemon needs to be
                        # stopped, otherwise, systemd gets confused
                        # If chkconfig/service are not installed assume that migration
                        # has already been done
                        /sbin/service ${project.artifactId} stop > /dev/null 2>&1 || :
                        /sbin/chkconfig --del ${project.artifactId}
                fi
        fi
              ]]></script>
            </preinstallScriptlet>
            <postinstallScriptlet>
              <script><![CDATA[
        if [ "$1" -eq 1 ]; then  # first install
                /bin/systemctl preset ${project.artifactId}.service > /dev/null 2>&1 || :
        elif [ "$1" -eq 2 ]; then  # upgrade
                /bin/systemctl daemon-reload > /dev/null 2>&1 || :

                # Calling 'preset' here is arguably wrong, but not doing it could leave
                # the daemon disabled when upgrading from the init script version
                /bin/systemctl preset ${project.artifactId}.service > /dev/null 2>&1 || :

                /bin/systemctl restart ${project.artifactId} > /dev/null 2>&1 || :
        fi
              ]]></script>
            </postinstallScriptlet>
            <preremoveScriptlet>
              <script><![CDATA[
        if [ "$1" -eq 0 ]; then  # Uninstall rather than upgrade
                /bin/systemctl --no-reload disable ${project.artifactId}.service > /dev/null 2>&1 || :
        fi
              ]]></script>
            </preremoveScriptlet>
            <postremoveScriptlet>
              <script><![CDATA[
        /bin/systemctl daemon-reload >/dev/null 2>&1 || :
              ]]></script>
            </postremoveScriptlet>
            <mappings combine.self="override">
              <mapping>
                <directory>/usr/sbin</directory>
                <filemode>755</filemode>
                <directoryIncluded>false</directoryIncluded>
                <sources>
                  <source>
                    <location>target/sbin</location>
                    <excludes>
                      <exclude>*.pod</exclude>
                    </excludes>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <sources>
                  <source>
                    <location>${project.build.directory}/systemd/${project.artifactId}.service</location>
                  </source>
                </sources>
                <directory>/usr/lib/systemd/system</directory>
                <filemode>644</filemode>
                <directoryIncluded>false</directoryIncluded>
              </mapping>
              <mapping>
                <sources>
                  <source>
                    <location>${project.build.directory}/systemd/80-${project.artifactId}.preset</location>
                  </source>
                </sources>
                <directory>/usr/lib/systemd/system-preset</directory>
                <filemode>644</filemode>
                <directoryIncluded>false</directoryIncluded>
              </mapping>
              <mapping>
                <directory>/usr/share/doc/${project.artifactId}-${project.version}</directory>
                <documentation>true</documentation>
                <directoryIncluded>false</directoryIncluded>
                <sources>
                  <source>
                    <location>${basedir}</location>
                    <includes>
                      <include>ChangeLog</include>
                    </includes>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <directory>/etc</directory>
                <documentation>false</documentation>
                <configuration>noreplace</configuration>
                <directoryIncluded>false</directoryIncluded>
                <sources>
                  <source>
                    <location>${project.build.directory}/etc</location>
                    <includes>
                      <include>**/*</include>
                    </includes>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <directory>/usr/share/quattor</directory>
                <filemode>755</filemode>
                <documentation>false</documentation>
                <directoryIncluded>false</directoryIncluded>
                <sources>
                  <source>
                    <location>${project.build.directory}/sbin</location>
                    <includes>
                      <include>check-cdp-listend</include>
                    </includes>
                  </source>
                </sources>
              </mapping>
            </mappings>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-script-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/sbin</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/scripts</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>filter-daemon</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/daemon</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/daemon</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>filter-config</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/etc</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/config</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- The pod2man script requires a somewhat matching layout
	     for the target/lib/perl and the target/doc/pod. The
	     following two executions do that. We'll have to ignore
	     the intermediate files from the RPM. -->
          <execution>
            <id>filter-pod-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/doc/pod</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/scripts</directory>
                  <includes>
                    <include>cdp-listend</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>mimick-ncm-ncd-man</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib/perl</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/scripts</directory>
                  <includes>
                    <include>cdp-listend</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-systemd-files</id>
            <phase>process-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/systemd</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/systemd</directory>
                  <includes>
                    <include>${project.artifactId}.service</include>
                    <include>80-${project.artifactId}.preset</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>rename-pod-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks name="Rename">
                <move file="${project.build.directory}/doc/pod/cdp-listend" filtering="true" tofile="${project.build.directory}/doc/pod/cdp-listend.pod" verbose="true" />
                <move file="${project.build.directory}/lib/perl/cdp-listend" filtering="true" tofile="${project.build.directory}/lib/perl/cdp-listend.pod" verbose="true" />
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>tarballs</id>
            <configuration combine.self="override">
              <descriptors>
                <descriptor>target/dependency/assemblies/bin.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
